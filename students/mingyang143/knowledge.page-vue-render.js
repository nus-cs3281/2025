
    const renderFn = new Function("const { createElementVNode: _createElementVNode, createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, withCtx: _withCtx, createVNode: _createVNode, createStaticVNode: _createStaticVNode, Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock } = Vue\n\nconst _hoisted_1 = { fixed: \"\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/2025/index.html\",\n  title: \"Home\",\n  class: \"navbar-brand\"\n}, \"CS3281&2-2025/Students\", -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2025/index.html\",\n    class: \"dropdown-item\"\n  }, \"Students\")\n], -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2025/students/knowledge.html\",\n    class: \"dropdown-item\"\n  }, \"Knowledge\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://nus-cs3281.github.io/2025-dashboard/?search=&sort=groupTitle&sortWithin=title&timeframe=commit&mergegroup=&groupSelect=groupByAuthors&breakdown=false\",\n    class: \"dropdown-item\"\n  }, \"Code Dashboard\")\n], -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2025/activities-dashboard.html\",\n    class: \"dropdown-item\"\n  }, \"Activities Dashboard\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2025/cs3282-index.html\",\n    class: \"dropdown-item\"\n  }, \"Students\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2025/students/talksSchedule.html\",\n    class: \"dropdown-item\"\n  }, \"Lightning Talks\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2025/activities-dashboard.html\",\n    class: \"dropdown-item\"\n  }, \"Activities Dashboard\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2025/instructions.html\",\n    class: \"nav-link\"\n  }, \"Instructions\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://nus-cs3281.github.io/website/\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createTextVNode(\"CS3281&2 Website \"),\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"span\", {\n        \"aria-hidden\": \"true\",\n        class: \"glyphicon glyphicon-share-alt\"\n      })\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://github.com/nus-cs3281/2025\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"span\", {\n        \"aria-hidden\": \"true\",\n        class: \"fab fa-github\"\n      })\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_13 = { id: \"flex-body\" }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"content-wrapper\",\n  class: \"fixed-header-padding\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"tool-technology-1-angular-and-dark-mode-implementation-for-the-frontend\" }, [\n    /*#__PURE__*/_createTextVNode(\"Tool/Technology 1: \"),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Angular and Dark Mode Implementation for the frontend\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#tool-technology-1-angular-and-dark-mode-implementation-for-the-frontend\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"aspects-learned\" }, [\n    /*#__PURE__*/_createTextVNode(\"Aspects Learned\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#aspects-learned\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Angular Component Communication:\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"Understanding how child components communicate with parent components using \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"@Output\"),\n          /*#__PURE__*/_createTextVNode(\" and \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"EventEmitter\"),\n          /*#__PURE__*/_createTextVNode(\".\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"Applying event binding in parent templates to listen for changes emitted by child components.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Conditional Class Application:\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"Dynamically applying CSS classes to elements using Angular’s \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"ngClass\"),\n          /*#__PURE__*/_createTextVNode(\" directive.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"Dynamically applying CSS classes to elements using Angular’s \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"[class]\"),\n          /*#__PURE__*/_createTextVNode(\" binding syntax.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"Managing theme switching logic in the parent component.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Event Binding:\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"Utilizing Angular’s \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"(event)\"),\n          /*#__PURE__*/_createTextVNode(\" binding syntax to handle user interactions.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"For example: \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"(change)=\\\"handleChange($event)\\\"\"),\n          /*#__PURE__*/_createTextVNode(\" to trigger functions when events like \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"change\"),\n          /*#__PURE__*/_createTextVNode(\" occur, passing the event object as an argument.\")\n        ])\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"resources-used-and-summary\" }, [\n    /*#__PURE__*/_createTextVNode(\"Resources Used and Summary\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#resources-used-and-summary\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://angular.io/\" }, \"Angular Official Documentation\"),\n          /*#__PURE__*/_createTextVNode(\":\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://angular.io/guide/component-interaction\" }, \"Components and Templates\"),\n          /*#__PURE__*/_createTextVNode(\": Learned how to use \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"@Output\"),\n          /*#__PURE__*/_createTextVNode(\" and \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"EventEmitter\"),\n          /*#__PURE__*/_createTextVNode(\" to enable child-to-parent communication.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://angular.io/api/common/NgClass\" }, \"NgClass Directive\"),\n          /*#__PURE__*/_createTextVNode(\": Understood how to conditionally apply CSS classes dynamically based on variables.\")\n        ])\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://www.udemy.com/course/the-complete-guide-to-angular-2/\" }, \"Udemy Course: \\\"Angular - The Complete Guide\\\" by Maximilian Schwarzmüller\"),\n          /*#__PURE__*/_createTextVNode(\":\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"This course, although I have yet to complete it provided a basic understanding of Angular, including component communication and dynamic class management, which were instrumental in implementing the dark mode feature.\")\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"final-thoughts\" }, [\n    /*#__PURE__*/_createTextVNode(\"Final Thoughts\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#final-thoughts\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"By combining these resources, I was able to implement a basic dark mode feature that functions effectively but still requires refinement. One key area for improvement is ensuring the dark mode state persists when navigating between routes. Currently, when the route changes (e.g., from \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"localhost:4200/web/\"),\n    /*#__PURE__*/_createTextVNode(\" to another route), the boolean variable controlling the dynamic CSS class allocation using \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"ngClass\"),\n    /*#__PURE__*/_createTextVNode(\" resets to its default light mode, even if dark mode was active prior to the route change.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"I suspect this behavior occurs because the page component is re-rendered during navigation, causing the component's state (including the boolean variable) to be re-initialized. To address this, I plan to research and implement a solution to persist the dark mode state. A promising approach might involve using a shared Angular service to store and manage the state globally, ensuring it remains consistent across routes. While I am not yet an expert in Angular, I am confident that further exploration and practice will help me refine this feature.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"tool-technology-2-mockito-and-advanced-unit-testing\" }, [\n    /*#__PURE__*/_createTextVNode(\"Tool/Technology 2: \"),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Mockito and advanced unit testing\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#tool-technology-2-mockito-and-advanced-unit-testing\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"aspects-learned-2\" }, [\n    /*#__PURE__*/_createTextVNode(\"Aspects Learned\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#aspects-learned-2\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Argument Matchers and Primitive vs. Boxed Types\"),\n        /*#__PURE__*/_createElementVNode(\"br\"),\n        /*#__PURE__*/_createTextVNode(\"\\nOne thing that really stood out to me while working with Mockito was how it handles \"),\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"primitive vs. boxed types\"),\n        /*#__PURE__*/_createTextVNode(\". I always assumed that since \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Boolean\"),\n        /*#__PURE__*/_createTextVNode(\" is just the boxed version of \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"boolean\"),\n        /*#__PURE__*/_createTextVNode(\", their argument matchers would behave the same way. However, I discovered that:\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"anyBoolean()\"),\n          /*#__PURE__*/_createTextVNode(\" works for both \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"boolean\"),\n          /*#__PURE__*/_createTextVNode(\" and \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Boolean\"),\n          /*#__PURE__*/_createTextVNode(\", but \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"any(Boolean.class)\"),\n          /*#__PURE__*/_createTextVNode(\" only works for \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Boolean\"),\n          /*#__PURE__*/_createTextVNode(\".\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"This small but crucial difference helped me understand why some of my test cases weren’t behaving as expected.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Handling Null Values in Argument Matchers\"),\n        /*#__PURE__*/_createElementVNode(\"br\"),\n        /*#__PURE__*/_createTextVNode(\"\\nAnother unexpected challenge was that \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"any()\"),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createTextVNode(\"does not match \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"null\"),\n          /*#__PURE__*/_createTextVNode(\" values\")\n        ]),\n        /*#__PURE__*/_createTextVNode(\". I initially thought \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"any()\"),\n        /*#__PURE__*/_createTextVNode(\" would work universally, but my tests kept failing when \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"null\"),\n        /*#__PURE__*/_createTextVNode(\" was passed in. After some research, I found that I needed to use \"),\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"nullable(UUID.class)\")\n        ]),\n        /*#__PURE__*/_createTextVNode(\" instead. This was an important learning moment because it made me more aware of how Mockito’s matchers handle \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"null\"),\n        /*#__PURE__*/_createTextVNode(\" values differently.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Verifying Method Calls\"),\n        /*#__PURE__*/_createElementVNode(\"br\"),\n        /*#__PURE__*/_createTextVNode(\"\\nI also gained a deeper understanding of \"),\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"method verification\"),\n        /*#__PURE__*/_createTextVNode(\" in Mockito.\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"To check if a method was called a specific number of times, I can use:\"),\n          /*#__PURE__*/_createElementVNode(\"pre\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs java\" }, [\n              /*#__PURE__*/_createElementVNode(\"span\", null, \"verify(mockObject, times(n)).methodToBeTested();\\n\")\n            ])\n          ])\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"times(1)\"),\n          /*#__PURE__*/_createTextVNode(\" ensures the method was called exactly once, while \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"never()\"),\n          /*#__PURE__*/_createTextVNode(\", \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"atLeastOnce()\"),\n          /*#__PURE__*/_createTextVNode(\", and \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"atMost(n)\"),\n          /*#__PURE__*/_createTextVNode(\" give more flexibility in defining expected call frequency.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"I used to take method verification for granted, but now I see how powerful it can be for ensuring the correct interactions in my tests.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createTextVNode(\"Difference Between \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"mock()\"),\n          /*#__PURE__*/_createTextVNode(\" and \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"spy()\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createTextVNode(\"I decided to dive deeper into stubbing with mockito which led me to learn more about the difference between \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"mock()\"),\n        /*#__PURE__*/_createTextVNode(\" and \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"spy()\"),\n        /*#__PURE__*/_createTextVNode(\".\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"mock(Class.class)\"),\n          /*#__PURE__*/_createTextVNode(\": Creates a mock object that does \"),\n          /*#__PURE__*/_createElementVNode(\"strong\", null, \"not\"),\n          /*#__PURE__*/_createTextVNode(\" execute real method logic.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"spy(object)\"),\n          /*#__PURE__*/_createTextVNode(\": Creates a partial mock where real methods are called unless stubbed.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"Although I'm not using spies now in TEAMMATES, I’ll need to be mindful of them in future projects, as unstubbed methods execute normally and can unexpectedly impact tests.\")\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"resources-used-and-summary-2\" }, [\n    /*#__PURE__*/_createTextVNode(\"Resources Used and Summary\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#resources-used-and-summary-2\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://site.mockito.org/\" }, \"Mockito Official Documentation\"),\n          /*#__PURE__*/_createTextVNode(\":\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"This was my go-to reference for understanding Mockito’s features, especially argument matchers and verification techniques.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://www.baeldung.com/mockito-series\" }, \"Mockito Series written by baeldung\"),\n          /*#__PURE__*/_createTextVNode(\":\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"Baeldung's examples helped me bridge the gap between learning individual Mockito features and applying them in real-world testing scenarios.\")\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"final-thoughts-2\" }, [\n    /*#__PURE__*/_createTextVNode(\"Final Thoughts\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#final-thoughts-2\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Working with Mockito has made me more confident in writing unit tests. I also gained a much deeper appreciation for argument matchers and null handling. Learning that \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"any()\"),\n    /*#__PURE__*/_createTextVNode(\" does not match null but \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"nullable(Class.class)\"),\n    /*#__PURE__*/_createTextVNode(\" does was an unexpected but valuable insight. These small details can make or break test reliability, so I’m glad I encountered them early on.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Looking ahead, I aim to sharpen my Mockito skills by exploring advanced features like mocking final classes and static methods. I also plan to experiment further with \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"ArgumentCaptor\"),\n    /*#__PURE__*/_createTextVNode(\", as it offers a more structured approach to inspecting method arguments in tests.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Mockito has already helped me write more effective and maintainable unit tests, and I’m excited to continue improving my testing skills with its advanced features!\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"tool-technology-3-e2e-testing-with-selenium\" }, [\n    /*#__PURE__*/_createTextVNode(\"Tool/Technology 3: \"),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"E2E testing with Selenium\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#tool-technology-3-e2e-testing-with-selenium\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"aspects-learned-3\" }, [\n    /*#__PURE__*/_createTextVNode(\"Aspects Learned\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#aspects-learned-3\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Simulating User Workflows with Selenium\"),\n        /*#__PURE__*/_createElementVNode(\"br\"),\n        /*#__PURE__*/_createTextVNode(\"\\nWhile writing E2E tests for \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"InstructorFeedbackEditPageE2ETest\"),\n        /*#__PURE__*/_createTextVNode(\", I got hands-on experience with simulating real user actions using \"),\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Selenium\"),\n        /*#__PURE__*/_createTextVNode(\"—like clicking buttons, selecting dropdowns, and filling text fields.\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"It gave me a better understanding of how an app is used from a user’s point of view, and how to verify behavior \"),\n          /*#__PURE__*/_createElementVNode(\"strong\", null, \"from the outside in\"),\n          /*#__PURE__*/_createTextVNode(\", rather than relying on internal implementation.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"I also learned how Selenium interacts with the browser via dedicated \"),\n          /*#__PURE__*/_createElementVNode(\"strong\", null, \"WebDriver binaries\"),\n          /*#__PURE__*/_createTextVNode(\" (e.g., \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"chromedriver\"),\n          /*#__PURE__*/_createTextVNode(\", \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"geckodriver\"),\n          /*#__PURE__*/_createTextVNode(\") that serve as a bridge between the test script and the actual browser. This enables automated control over the DOM, allowing scripts to locate, manipulate, and verify UI elements dynamically.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"It was insightful to see how tests can launch and control real browsers programmatically, enabling full-stack validation of user flows across the frontend and backend.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Using the Page Object Pattern for Maintainability\"),\n        /*#__PURE__*/_createElementVNode(\"br\"),\n        /*#__PURE__*/_createTextVNode(\"\\nOne of the standout aspects of TEAMMATES’ E2E testing architecture is its use of the \"),\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Page Object Pattern\"),\n        /*#__PURE__*/_createTextVNode(\".\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"I interacted with \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"InstructorFeedbackEditPage\"),\n          /*#__PURE__*/_createTextVNode(\" which abstracts user interactions like \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"editSessionDetails()\"),\n          /*#__PURE__*/_createTextVNode(\", \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"copyQuestion()\"),\n          /*#__PURE__*/_createTextVNode(\", and \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"deleteQuestion()\"),\n          /*#__PURE__*/_createTextVNode(\" into easy-to-read methods.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"This helped me avoid brittle selectors in test code and focus purely on the behavior under test. I now better appreciate why decoupling UI structure from test logic improves maintainability.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"End-to-End Testing Mindset\"),\n        /*#__PURE__*/_createElementVNode(\"br\"),\n        /*#__PURE__*/_createTextVNode(\"\\nE2E testing forces a shift in mindset: instead of testing small functions, I had to think of \"),\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"user workflows\"),\n        /*#__PURE__*/_createTextVNode(\".\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"For example, in \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"InstructorFeedbackEditPageE2ETest\"),\n          /*#__PURE__*/_createTextVNode(\", I verified the flow from editing session settings to saving and checking if the changes persisted.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"It taught me to balance \"),\n          /*#__PURE__*/_createElementVNode(\"strong\", null, \"test coverage vs. cost\"),\n          /*#__PURE__*/_createTextVNode(\", as E2E tests are more expensive to run and maintain than unit tests. That’s why I learned to focus on \"),\n          /*#__PURE__*/_createElementVNode(\"strong\", null, \"happy paths\"),\n          /*#__PURE__*/_createTextVNode(\" and \"),\n          /*#__PURE__*/_createElementVNode(\"strong\", null, \"common exceptions\"),\n          /*#__PURE__*/_createTextVNode(\", while leaving edge cases to unit/integration testing.\")\n        ])\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"resources-used-and-summary-3\" }, [\n    /*#__PURE__*/_createTextVNode(\"Resources Used and Summary\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#resources-used-and-summary-3\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://teammates.github.io/teammates/e2e-testing.html\" }, \"TEAMMATES Developer Guide - E2E Testing Section\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"This was my main reference to understand how TEAMMATES structures E2E tests.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://www.selenium.dev/documentation/\" }, \"Selenium Official Documentation\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, [\n          /*#__PURE__*/_createTextVNode(\"Helped me learn proper techniques to interact with web elements and handle dynamic UI changes using \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"waits\"),\n          /*#__PURE__*/_createTextVNode(\", \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"findElement\"),\n          /*#__PURE__*/_createTextVNode(\", and \"),\n          /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"actions\"),\n          /*#__PURE__*/_createTextVNode(\".\")\n        ])\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"InstructorFeedbackEditPage and Existing E2E Tests in TEAMMATES Codebase\")\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"Studying similar E2E test files gave me reusable patterns for structuring assertions, handling browser context switching, and organizing test logic.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, [\n          /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://martinfowler.com/bliki/PageObject.html\" }, \"Page Object Pattern\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"ul\", null, [\n        /*#__PURE__*/_createElementVNode(\"li\", null, \"I learned more about the Page Object Pattern from this website.\")\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"final-thoughts-3\" }, [\n    /*#__PURE__*/_createTextVNode(\"Final Thoughts\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#final-thoughts-3\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Working on \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"InstructorFeedbackEditPageE2ETest\"),\n    /*#__PURE__*/_createTextVNode(\" taught me how to \"),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"write robust, user-centered tests\"),\n    /*#__PURE__*/_createTextVNode(\" that are maintainable and comprehensive. I no longer see E2E testing as just UI clicking automation — it's about capturing workflows, ensuring frontend-backend consistency, and protecting critical paths of the app from regression.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Looking ahead, I want to deepen my understanding of TEAMMATES' E2E infrastructure—particularly why \"),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"parallel test execution\"),\n    /*#__PURE__*/_createTextVNode(\" tends to be flaky on GitHub Actions. I’m also interested in contributing to making E2E tests more stable and predictable in CI environments, possibly by reviewing test data setup and teardown practices.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Overall, this experience has made me more confident in both automated testing and system-level thinking as a developer.\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"nav-component slim-scroll\" }, null, -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/_createStaticVNode(\"<footer><div class=\\\"text-center\\\"><p>[<strong>This site was generated using <img src=\\\"https://markbind.org/favicon.ico\\\" width=\\\"25\\\"> <a href=\\\"https://markbind.org/\\\">MarkBind 6.0.0</a></strong> on Sun, 20 Apr 2025, 17:01:53 UTC]<br> <span class=\\\"dimmed\\\"><small><small>favicon.ico of this site was made by <a href=\\\"https://www.flaticon.com/authors/smashicons\\\" title=\\\"Smashicons\\\">Smashicons</a> from <a href=\\\"https://www.flaticon.com/\\\" title=\\\"Flaticon\\\">www.flaticon.com</a> is licensed by <a href=\\\"http://creativecommons.org/licenses/by/3.0/\\\" title=\\\"Creative Commons BY 3.0\\\" target=\\\"_blank\\\">CC 3.0 BY</a></small></small></span></p></div></footer>\", 1)\n\nreturn function render(_ctx, _cache) {\n  const _component_dropdown = _resolveComponent(\"dropdown\")\n  const _component_navbar = _resolveComponent(\"navbar\")\n  const _component_overlay_source = _resolveComponent(\"overlay-source\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createVNode(_component_navbar, {\n        placement: \"top\",\n        type: \"primary\"\n      }, {\n        brand: _withCtx(() => [\n          _hoisted_2\n        ]),\n        right: _withCtx(() => [\n          _hoisted_12\n        ]),\n        default: _withCtx(() => [\n          _createTextVNode(),\n          _createVNode(_component_dropdown, { class: \"nav-link\" }, {\n            header: _withCtx(() => [\n              _createTextVNode(\"CS3281\")\n            ]),\n            default: _withCtx(() => [\n              _createTextVNode(),\n              _hoisted_3,\n              _createTextVNode(),\n              _hoisted_4,\n              _createTextVNode(),\n              _hoisted_5,\n              _createTextVNode(),\n              _hoisted_6\n            ]),\n            _: 1 /* STABLE */\n          }),\n          _createTextVNode(),\n          _createVNode(_component_dropdown, { class: \"nav-link\" }, {\n            header: _withCtx(() => [\n              _createTextVNode(\"CS3282\")\n            ]),\n            default: _withCtx(() => [\n              _createTextVNode(),\n              _hoisted_7,\n              _createTextVNode(),\n              _hoisted_8,\n              _createTextVNode(),\n              _hoisted_9\n            ]),\n            _: 1 /* STABLE */\n          }),\n          _createTextVNode(),\n          _hoisted_10,\n          _createTextVNode(),\n          _hoisted_11,\n          _createTextVNode()\n        ]),\n        _: 1 /* STABLE */\n      })\n    ]),\n    _createTextVNode(),\n    _createElementVNode(\"div\", _hoisted_13, [\n      _hoisted_14,\n      _createTextVNode(),\n      _createVNode(_component_overlay_source, {\n        id: \"page-nav\",\n        class: \"fixed-header-padding\",\n        \"tag-name\": \"nav\",\n        to: \"page-nav\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_15\n        ]),\n        _: 1 /* STABLE */\n      })\n    ]),\n    _createTextVNode(),\n    _hoisted_16\n  ], 64 /* STABLE_FRAGMENT */))\n}");
    var render = renderFn();
  